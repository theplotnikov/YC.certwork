    stage ('input the yandex cloud private data') {
      steps {
        timeout (time: 60, unit: 'SECONDS') {
          script {
          def inputcloud_id
          def inputfolder_id
          def inputtoken
          def inputpubkey
          def userInput = input (
          id: 'userInput',
          message: 'enter your\'s cloud private data',
          parameters: [
          string (defaultValue: 'YourCloudID', description: 'cloud_id value', name: 'cloud_id'),
          string (defaultValue: 'YourFolderID', description: 'folder_id value', name: 'folder_id'),
          string (defaultValue: 'YourToken', description: 'token value', name: 'token'),
          string (defaultValue: 'YourPubKey', description: 'pubkey value', name: 'pubkey'),
          ])
          inputcloud_id = userInput.cloud_id?:''
          inputfolder_id = userInput.folder_id?:''
          inputtoken = userInput.token?:''
          inputpubkey = userInput.pubkey?:''
          writeFile file: "var.cloud_id", text: "${inputcloud_id}"
          writeFile file: "var.folder_id", text: "${inputfolder_id}"
          writeFile file: "var.token", text: "${inputtoken}"
          writeFile file: "var.pubkey", text: "${inputpubkey}"
      }
    }
  }
}



script {
  def inputConfig
  def userInput = input(id: 'userInput', message: 'Enter path of test reports:?', parameters: [string (defaultValue: 'None', description: 'Path of config file', name: 'Config'),])
  inputConfig = userInput.Config?:''
  inputTest = userInput.Test?:''
  writeFile file: "inputData.txt", text: "Config=${inputConfig}"
  archiveArtifacts 'inputData.txt'



















    stage ('input the yandex folder id') {
      steps {
        script {
        def inputfolder_id
        def userInput = input (
        id: 'userInput',
        message: 'enter your\'s yandex folder id',
        parameters: [
        string (defaultValue: 'YourFolderID', description: 'folder_id value', name: 'folder_id'),
        ])
        inputfolder_id = userInput.folder_id?:''
        writeFile file: "id_folder", text: "${inputfolder_id}"
    }
  }
}

    stage ('input the yandex token') {
      steps {
        script {
        def inputtoken_id
        def userInput = input (
        id: 'userInput',
        message: 'enter your\'s yandex token',
        parameters: [
        string (defaultValue: 'YourToken', description: 'token_id value', name: 'token_id'),
        ])
        inputtoken_id = userInput.token_id?:''
        writeFile file: "id_token", text: "${inputtoken_id}"
    }
  }
}


